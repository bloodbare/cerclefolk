[buildout]
parts =  
    instance
    zopepy
    i18ndude
    test
    omelette
    repozo
    backup

extends = 
    http://dist.plone.org/release/5.0rc2-pending/versions.cfg

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/5.0rc2-pending/
    http://dist.plone.org/thirdparty

extensions = 
    mr.developer

sources = sources

auto-checkout = *

versions = versions

develop =
    src/cerclefolk.core
    src/cerclefolk.theme

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8082
effective-user = plone
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage

environment-vars =
    zope_i18n_compile_mo_files true

eggs =
    Pillow
    Plone
    plone.app.dexterity
    collective.dexteritytextindexer
    plone.app.mosaic
    collective.themefragments
    z3c.jbot
    plone.reload
    cerclefolk.core
    cerclefolk.theme
    Solgema.fullcalendar
    eea.facetednavigation
    collective.geo.bundle [dexterity]
    xlsxwriter
    plone.directives.form
    plone.app.changeownership


zope-conf-additional = 
    <product-config beaker>
        session type     file 
        session.data_dir ${buildout:directory}/var/sessions/data
        session.lock_dir ${buildout:directory}/var/sessions/lock 
        session.key      beaker.session
        session.secret   this-is-my-secret-${buildout:directory}
    </product-config>


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on the format of
# this part
[sources]
Solgema.fullcalendar = git https://github.com/collective/Solgema.fullcalendar.git branch=plone5
eea.facetednavigation = git https://github.com/collective/eea.facetednavigation.git
collective.easyform = git https://github.com/quintagroup/collective.easyform.git
collective.geo.bundle = git https://github.com/collective/collective.geo.bundle.git
collective.geo.geographer = git https://github.com/collective/collective.geo.geographer.git
collective.geo.openlayers = git https://github.com/collective/collective.geo.openlayers.git
collective.geo.settings = git https://github.com/collective/collective.geo.settings.git
collective.z3cform.mapwidget = git https://github.com/collective/collective.z3cform.mapwidget.git
collective.geo.behaviour = git https://github.com/collective/collective.geo.behaviour.git
collective.geo.mapwidget = git https://github.com/collective/collective.geo.mapwidget.git
collective.geo.contentlocations = git https://github.com/collective/collective.geo.contentlocations.git
collective.themefragments = git https://github.com/collective/collective.themefragments.git
collective.js.jqueryui = git https://github.com/collective/collective.js.jqueryui.git
plone.app.mosaic = git https://github.com/plone/plone.app.mosaic.git 
plone.app.standardtiles = git https://github.com/plone/plone.app.standardtiles.git 
plone.app.tiles = git https://github.com/plone/plone.app.tiles.git 
plone.tiles = git https://github.com/plone/plone.tiles.git 
plone.app.blocks = git https://github.com/plone/plone.app.blocks.git 
plone.app.drafts = git https://github.com/plone/plone.app.drafts.git 
collective.dynamicmosaic = git https://github.com/collective/collective.dynamicmosaic.git 
collective.js.fullcalendar = git https://github.com/collective/collective.js.fullcalendar.git branch=plone5
Solgema.ContextualContentMenu = git https://github.com/collective/Solgema.ContextualContentMenu.git branch=plone5

# Version pindowns for new style products go here - this section extends one 
# provided in http://dist.plone.org/release/
[versions]
ply = 3.4

[backup] 
recipe = collective.recipe.backup 
keep = 7 
full = true 
gzip = true
